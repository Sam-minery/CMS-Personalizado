/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    media: Media;
    categories: Category;
    users: User;
    'contact-submissions': ContactSubmission;
    'form-custom-2-submissions': FormCustom2Submission;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    'contact-submissions': ContactSubmissionsSelect<false> | ContactSubmissionsSelect<true>;
    'form-custom-2-submissions': FormCustom2SubmissionsSelect<false> | FormCustom2SubmissionsSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact' | 'custom2';
    richText?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: number | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: number | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (number | null) | Media;
  };
  layout: (
    | ArchiveBlock
    | Banner4Block
    | Banner9Block
    | Blog1BlockType
    | Blog5BlockType
    | BlogPostHeader1BlockType
    | BlogPostHeader5BlockType
    | CallToActionBlock
    | CareerSection1Block
    | {
        tagline: string;
        heading: string;
        description: string;
        depts3?:
          | {
              title: string;
              jobs?:
                | {
                    title: string;
                    location: string;
                    description: string;
                    url: string;
                    button: {
                      title: string;
                      variant?: ('default' | 'secondary' | 'outline' | 'ghost') | null;
                      size?: ('sm' | 'default' | 'lg') | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'career3';
      }
    | {
        tagline: string;
        heading: string;
        description: string;
        depts4?:
          | {
              title: string;
              jobs?:
                | {
                    title: string;
                    location: string;
                    description: string;
                    url: string;
                    button: {
                      title: string;
                      variant?: ('default' | 'secondary' | 'outline' | 'ghost') | null;
                      size?: ('sm' | 'default' | 'lg') | null;
                    };
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
        blockName?: string | null;
        blockType: 'career4';
      }
    | Comparison1Block
    | Comparison13Block
    | ContentBlock
    | CTACustom_2Block
    | Event1Block
    | Event3Block
    | EventHeader1Block
    | EventHeader3Block
    | EventItemHeader1Block
    | EventItemHeader5Block
    | FAQ2Block
    | FAQ4Block
    | FormBlock
    | FormCustom_2Block
    | MultiForm2Block
    | MultiForm7Block
    | Gallery6Block
    | Gallery19Block
    | Gallery27Block
    | Links1Block
    | Links4Block
    | Logo1Block
    | Logo2Block
    | LongContent1Block
    | LongContent2Block
    | LongContent3Block
    | LongContent4Block
    | MediaBlock
    | Portfolio1Block
    | Portfolio5Block
    | PortfolioHeader1Block
    | PortfolioHeader2Block
    | Pricing5Block
    | Stats1Block
    | Stats3Block
    | {
        tagline?: string | null;
        heading?: string | null;
        description?: string | null;
        teamMembers?:
          | {
              image?: (number | null) | Media;
              name?: string | null;
              jobTitle?: string | null;
              description?: string | null;
              socialLinks?:
                | {
                    href?: string | null;
                    platform?: ('linkedin' | 'twitter' | 'dribbble') | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        footer?: {
          heading?: string | null;
          description?: string | null;
          button?: {
            title?: string | null;
            variant?: ('primary' | 'secondary' | 'outline') | null;
            href?: string | null;
          };
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'team1';
      }
    | {
        tagline?: string | null;
        heading?: string | null;
        description?: string | null;
        teamMembers?:
          | {
              image?: (number | null) | Media;
              name?: string | null;
              jobTitle?: string | null;
              description?: string | null;
              socialLinks?:
                | {
                    href?: string | null;
                    platform?: ('linkedin' | 'twitter' | 'dribbble') | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        footer?: {
          heading?: string | null;
          description?: string | null;
          button?: {
            title?: string | null;
            variant?: ('primary' | 'secondary' | 'outline') | null;
            href?: string | null;
          };
        };
        id?: string | null;
        blockName?: string | null;
        blockType: 'team2';
      }
    | Testimonial3Block
    | Testimonial6Block
    | Timeline1Block
    | Timeline3Block
    | Timeline7Block
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: number;
  title: string;
  heroImage?: (number | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (number | Post)[] | null;
  categories?: (number | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (number | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: number;
  title: string;
  slug?: string | null;
  slugLock?: boolean | null;
  parent?: (number | null) | Category;
  breadcrumbs?:
    | {
        doc?: (number | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (number | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: number | Post;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Banner4Block".
 */
export interface Banner4Block {
  heading: string;
  description: string;
  logo: number | Media;
  /**
   * URL de enlace para el logo (opcional)
   */
  logoUrl?: string | null;
  socialMediaLinks?:
    | {
        url: string;
        platform: 'facebook' | 'instagram' | 'twitter' | 'linkedin';
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner4';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Banner9Block".
 */
export interface Banner9Block {
  heading: string;
  description: string;
  logo: number | Media;
  /**
   * URL de enlace para el logo (opcional)
   */
  logoUrl?: string | null;
  socialMediaLinks?:
    | {
        url: string;
        platform: 'facebook' | 'instagram' | 'twitter' | 'linkedin';
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner9';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Blog1BlockType".
 */
export interface Blog1BlockType {
  tagline?: string | null;
  heading?: string | null;
  description?: string | null;
  buttons?:
    | {
        title: string;
        variant?: ('primary' | 'secondary' | 'link') | null;
        id?: string | null;
      }[]
    | null;
  categoryLink?: string | null;
  blogPosts?:
    | {
        url: string;
        image: number | Media;
        category: string;
        title: string;
        description: string;
        avatar: number | Media;
        fullName: string;
        date: string;
        readTime: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'blog1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Blog5BlockType".
 */
export interface Blog5BlockType {
  tagline?: string | null;
  heading?: string | null;
  description?: string | null;
  buttons?:
    | {
        title: string;
        variant?: ('primary' | 'secondary' | 'link') | null;
        id?: string | null;
      }[]
    | null;
  categoryLink?: string | null;
  featuredBlogPost: {
    url: string;
    image: number | Media;
    category: string;
    title: string;
    description: string;
    avatar: number | Media;
    fullName: string;
    date: string;
    readTime: string;
  };
  blogPosts?:
    | {
        url: string;
        image: number | Media;
        category: string;
        title: string;
        description: string;
        avatar: number | Media;
        fullName: string;
        date: string;
        readTime: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'blog5';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogPostHeader1BlockType".
 */
export interface BlogPostHeader1BlockType {
  breadcrumbs?:
    | {
        url: string;
        title: string;
        id?: string | null;
      }[]
    | null;
  heading: string;
  image: number | Media;
  author: {
    avatar: number | Media;
    fullName: string;
    date: string;
    readTime: string;
  };
  socialMediaLinks?:
    | {
        url: string;
        iconType: 'link' | 'linkedin' | 'twitter' | 'facebook';
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'blogPostHeader1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogPostHeader5BlockType".
 */
export interface BlogPostHeader5BlockType {
  category: string;
  heading: string;
  image: number | Media;
  author: {
    avatar: number | Media;
    fullName: string;
    date: string;
    readTime: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'blogPostHeader5';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CareerSection1Block".
 */
export interface CareerSection1Block {
  tagline: string;
  heading: string;
  description: string;
  jobDepartments?:
    | {
        title: string;
        jobs?:
          | {
              title: string;
              location: string;
              description: string;
              url: string;
              button: {
                title: string;
                variant?: ('default' | 'secondary' | 'outline' | 'ghost') | null;
                size?: ('sm' | 'default' | 'lg') | null;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'careerSection1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Comparison1Block".
 */
export interface Comparison1Block {
  tagline: string;
  heading: string;
  description: string;
  comparisonProducts?:
    | {
        title?: string | null;
        products?:
          | {
              icon: number | Media;
              productName: string;
              description: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  features?:
    | {
        text: string;
        items?:
          | {
              type: 'text' | 'check' | 'x';
              textValue?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  buttons?:
    | {
        title: string;
        variant: 'primary' | 'secondary' | 'outline' | 'ghost' | 'link';
        size: 'sm' | 'md' | 'lg' | 'link';
        url: string;
        iconRight?: boolean | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'comparison1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Comparison13Block".
 */
export interface Comparison13Block {
  tagline: string;
  heading: string;
  description: string;
  products?:
    | {
        icon: number | Media;
        productName: string;
        description: string;
        mainFeatures?:
          | {
              text: string;
              items?:
                | {
                    type: 'text' | 'check' | 'x';
                    textValue?: string | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        features?:
          | {
              text: string;
              items?:
                | {
                    type: 'text' | 'check' | 'x';
                    textValue?: string | null;
                    id?: string | null;
                  }[]
                | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'comparison13';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA_custom_2Block".
 */
export interface CTACustom_2Block {
  heading: string;
  description: string;
  buttons?:
    | {
        title: string;
        variant?: ('default' | 'secondary' | 'outline' | 'ghost') | null;
        href?: string | null;
        id?: string | null;
      }[]
    | null;
  image: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta_custom_2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Event1Block".
 */
export interface Event1Block {
  tagline: string;
  heading: string;
  description: string;
  tabs?:
    | {
        value: string;
        trigger: string;
        content?:
          | {
              url: string;
              date: {
                weekday: string;
                day: string;
                month: string;
                year: string;
              };
              title: string;
              status?: string | null;
              location: string;
              description: string;
              button: {
                variant: 'primary' | 'secondary' | 'outline' | 'ghost';
                size: 'sm' | 'md' | 'lg';
                title: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'event1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Event3Block".
 */
export interface Event3Block {
  tagline: string;
  heading: string;
  description: string;
  tabs?:
    | {
        value: string;
        trigger: string;
        content?:
          | {
              url: string;
              image: number | Media;
              date: {
                weekday: string;
                day: string;
                month: string;
                year: string;
              };
              title: string;
              status?: string | null;
              location: string;
              description: string;
              button: {
                variant: 'primary' | 'secondary' | 'outline' | 'ghost';
                size: 'sm' | 'md' | 'lg';
                title: string;
                url: string;
              };
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'event3';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventHeader1Block".
 */
export interface EventHeader1Block {
  tagline: string;
  heading: string;
  description: string;
  event: {
    url: string;
    image: number | Media;
    date: {
      weekday: string;
      day: string;
      month: string;
      year: string;
    };
    category: string;
    title: string;
    /**
     * Dejar vacío si no hay estado especial
     */
    status?: string | null;
    location: string;
    description: string;
    button: {
      title: string;
      /**
       * Valores: primary, secondary, link
       */
      variant?: string | null;
      /**
       * Valores: sm, md, lg, primary
       */
      size?: string | null;
    };
  };
  filters?:
    | {
        button: {
          title: string;
          /**
           * Valores: primary, secondary, link
           */
          variant?: string | null;
          /**
           * Valores: sm, md, lg
           */
          size?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  events?:
    | {
        url: string;
        date: {
          weekday: string;
          day: string;
          month: string;
          year: string;
        };
        title: string;
        /**
         * Dejar vacío si no hay estado especial
         */
        status?: string | null;
        location: string;
        description: string;
        button: {
          title: string;
          /**
           * Valores: primary, secondary, link
           */
          variant?: string | null;
          /**
           * Valores: sm, md, lg
           */
          size?: string | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'eventHeader1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventHeader3Block".
 */
export interface EventHeader3Block {
  tagline: string;
  heading: string;
  description: string;
  event: {
    url: string;
    image?: (number | null) | Media;
    category: string;
    /**
     * Dejar vacío si no hay estado especial
     */
    status?: string | null;
    title: string;
    date: {
      weekday: string;
      day: string;
      month: string;
      year: string;
    };
    location: string;
    description: string;
    button: {
      title: string;
      /**
       * Enlace al que dirigirá el botón al hacer clic
       */
      url: string;
      variant: 'primary' | 'secondary' | 'link' | 'outline';
      size: 'small' | 'medium' | 'large' | 'primary' | 'link';
    };
  };
  featuredEvents?:
    | {
        url: string;
        image?: (number | null) | Media;
        /**
         * Dejar vacío si no hay estado especial
         */
        status?: string | null;
        date: {
          weekday: string;
          day: string;
          month: string;
          year: string;
        };
        location: string;
        title: string;
        description: string;
        button: {
          title: string;
          /**
           * Enlace al que dirigirá el botón al hacer clic
           */
          url: string;
          variant: 'primary' | 'secondary' | 'link' | 'outline';
          size: 'small' | 'medium' | 'large' | 'primary' | 'link';
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'eventHeader3';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventItemHeader1Block".
 */
export interface EventItemHeader1Block {
  backLink: {
    url: string;
    button: {
      title: string;
      /**
       * Valores: primary, secondary, link
       */
      variant?: string | null;
      /**
       * Valores: sm, md, lg, link
       */
      size?: string | null;
    };
  };
  heading: string;
  description: string;
  image: number | Media;
  inputPlaceholder: string;
  button: {
    title: string;
    /**
     * Valores: primary, secondary, link
     */
    variant?: string | null;
    /**
     * Valores: sm, md, lg
     */
    size?: string | null;
  };
  termsAndConditions?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  date: {
    weekday: string;
    day: string;
    month: string;
    year?: string | null;
  };
  countdownIsoDate: string;
  amountLeft: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'eventItemHdr1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventItemHeader5Block".
 */
export interface EventItemHeader5Block {
  backLink: {
    url: string;
    button: {
      title: string;
      /**
       * Valores: primary, secondary, link
       */
      variant?: string | null;
      /**
       * Valores: sm, md, lg, link
       */
      size?: string | null;
    };
  };
  heading: string;
  description: string;
  image: number | Media;
  inputPlaceholder: string;
  button: {
    title: string;
    /**
     * Valores: primary, secondary, link
     */
    variant?: string | null;
    /**
     * Valores: sm, md, lg
     */
    size?: string | null;
  };
  termsAndConditions?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  date: {
    weekday: string;
    day: string;
    month: string;
    year?: string | null;
  };
  countdownIsoDate: string;
  amountLeft: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'eventItemHdr5';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ2Block".
 */
export interface FAQ2Block {
  heading: string;
  description: string;
  questions?:
    | {
        title: string;
        answer: string;
        id?: string | null;
      }[]
    | null;
  footerHeading: string;
  footerDescription: string;
  button: {
    title: string;
    url: string;
    variant: 'primary' | 'secondary' | 'link' | 'outline';
    size: 'small' | 'medium' | 'large' | 'primary' | 'link';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'faq2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ4Block".
 */
export interface FAQ4Block {
  heading: string;
  description: string;
  questions?:
    | {
        title: string;
        answer: string;
        id?: string | null;
      }[]
    | null;
  footerHeading: string;
  footerDescription: string;
  button: {
    title: string;
    url: string;
    variant: 'primary' | 'secondary' | 'link' | 'outline';
    size: 'small' | 'medium' | 'large' | 'primary' | 'link';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'faq4';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: number | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: number;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: string;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Form_custom_2Block".
 */
export interface FormCustom_2Block {
  logo?: {
    url?: string | null;
    src?: string | null;
    alt?: string | null;
  };
  navText?: string | null;
  navButton?: {
    title?: string | null;
    variant?: ('link' | 'default' | 'secondary' | 'outline') | null;
    size?: ('link' | 'default' | 'sm' | 'lg') | null;
  };
  footerText?: string | null;
  step1Title?: string | null;
  step1Description?: string | null;
  step2Title?: string | null;
  step2Description?: string | null;
  step3Title?: string | null;
  step3Description?: string | null;
  step4Title?: string | null;
  step4Description?: string | null;
  serviceTypeOptions?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  budgetOptions?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  employeesOptions?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  countriesOptions?:
    | {
        id?: number | null;
        label?: string | null;
        value?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'form_custom_2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MultiForm2Block".
 */
export interface MultiForm2Block {
  /**
   * Selecciona una imagen para el logo desde la biblioteca de medios
   */
  logo?: (number | null) | Media;
  /**
   * URL personalizada para el logo (si no se selecciona una imagen)
   */
  logoUrl?: string | null;
  navText?: string | null;
  navButton?: {
    title?: string | null;
    variant?: ('link' | 'default' | 'secondary' | 'outline') | null;
    size?: ('link' | 'default' | 'sm' | 'lg') | null;
  };
  footerText?: string | null;
  step1Title?: string | null;
  step1Description?: string | null;
  step2Title?: string | null;
  step2Description?: string | null;
  step3Title?: string | null;
  step3Description?: string | null;
  step4Title?: string | null;
  step4Description?: string | null;
  serviceTypeOptions?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  budgetOptions?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  employeesOptions?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  countriesOptions?:
    | {
        id?: number | null;
        label?: string | null;
        value?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'multiForm2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MultiForm7Block".
 */
export interface MultiForm7Block {
  /**
   * Selecciona una imagen para el logo desde la biblioteca de medios
   */
  logo?: (number | null) | Media;
  /**
   * URL personalizada para el logo (si no se selecciona una imagen)
   */
  logoUrl?: string | null;
  /**
   * Selecciona una imagen para el lado derecho del formulario
   */
  image?: (number | null) | Media;
  /**
   * URL personalizada para la imagen de fondo (si no se selecciona una imagen)
   */
  imageUrl?: string | null;
  footerText?: string | null;
  step1Title?: string | null;
  step1Description?: string | null;
  step2Title?: string | null;
  step2Description?: string | null;
  step3Title?: string | null;
  step3Description?: string | null;
  step4Title?: string | null;
  step4Description?: string | null;
  serviceTypeOptions?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  budgetOptions?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  employeesOptions?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  countriesOptions?:
    | {
        id?: number | null;
        label?: string | null;
        value?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'multiForm7';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery6Block".
 */
export interface Gallery6Block {
  heading: string;
  description: string;
  images?:
    | {
        image: number | Media;
        url?: string | null;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'gallery6';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery19Block".
 */
export interface Gallery19Block {
  heading: string;
  description: string;
  images?:
    | {
        image: number | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'gallery19';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery27Block".
 */
export interface Gallery27Block {
  heading: string;
  description: string;
  images?:
    | {
        image: number | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'gallery27';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Links1Block".
 */
export interface Links1Block {
  author: {
    avatar: number | Media;
    fullName: string;
    position: string;
    location: string;
  };
  categories?:
    | {
        heading?: string | null;
        links?:
          | {
              url: string;
              title: string;
              variant?: ('primary' | 'secondary' | 'outline' | 'ghost' | 'link') | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  button: {
    variant: 'primary' | 'secondary' | 'outline' | 'ghost' | 'link';
    title: string;
    subtitle: string;
  };
  newsLetter: {
    heading: string;
    description: string;
    inputPlaceholder?: string | null;
    submitButtonTitle: string;
    termsAndConditions?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  socialLinks?:
    | {
        href: string;
        platform: 'facebook' | 'instagram' | 'twitter' | 'linkedin' | 'youtube';
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'links1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Links4Block".
 */
export interface Links4Block {
  image: number | Media;
  author: {
    fullName: string;
    position: string;
    location: string;
  };
  categories?:
    | {
        heading?: string | null;
        links?:
          | {
              url: string;
              title: string;
              variant?: ('primary' | 'secondary' | 'outline' | 'ghost' | 'link') | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  button: {
    variant: 'primary' | 'secondary' | 'outline' | 'ghost' | 'link';
    title: string;
    subtitle: string;
  };
  newsLetter: {
    heading: string;
    description: string;
    inputPlaceholder?: string | null;
    submitButtonTitle: string;
    termsAndConditions?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
  };
  socialLinks?:
    | {
        href: string;
        platform: 'facebook' | 'instagram' | 'twitter' | 'linkedin' | 'youtube';
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'links4';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logo1Block".
 */
export interface Logo1Block {
  heading: string;
  logos?:
    | {
        image: number | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'logo1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logo2Block".
 */
export interface Logo2Block {
  heading: string;
  logos?:
    | {
        image: number | Media;
        alt?: string | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'logo2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LongContent1Block".
 */
export interface LongContent1Block {
  heading: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  image: {
    src: number | Media;
    alt: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'longContent1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LongContent2Block".
 */
export interface LongContent2Block {
  heading: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  image: {
    src: number | Media;
    alt: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'longContent2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LongContent3Block".
 */
export interface LongContent3Block {
  heading: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * URL del video (ej: https://www.youtube.com/embed/VIDEO_ID)
   */
  video: string;
  image: {
    src: number | Media;
    alt: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'longContent3';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LongContent4Block".
 */
export interface LongContent4Block {
  heading: string;
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  /**
   * URL del video (ej: https://www.youtube.com/embed/VIDEO_ID)
   */
  video: string;
  image: {
    src: number | Media;
    alt: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'longContent4';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Portfolio1Block".
 */
export interface Portfolio1Block {
  tagline: string;
  heading: string;
  description: string;
  projects?:
    | {
        title: string;
        description: string;
        image: number | Media;
        url: string;
        button: {
          title: string;
          variant: 'primary' | 'secondary' | 'link' | 'outline';
          size: 'small' | 'medium' | 'large' | 'primary' | 'link';
        };
        id?: string | null;
      }[]
    | null;
  button: {
    title: string;
    variant: 'primary' | 'secondary' | 'link' | 'outline';
    size: 'small' | 'medium' | 'large' | 'primary' | 'link';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'portfolio1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Portfolio5Block".
 */
export interface Portfolio5Block {
  tagline: string;
  heading: string;
  description: string;
  projects?:
    | {
        title: string;
        description: string;
        image: number | Media;
        url: string;
        tags?:
          | {
              label: string;
              url: string;
              id?: string | null;
            }[]
          | null;
        button: {
          title: string;
          variant: 'primary' | 'secondary' | 'link' | 'outline';
          size: 'small' | 'medium' | 'large' | 'primary' | 'link';
        };
        id?: string | null;
      }[]
    | null;
  button: {
    title: string;
    variant: 'primary' | 'secondary' | 'link' | 'outline';
    size: 'small' | 'medium' | 'large' | 'primary' | 'link';
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'portfolio5';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PortfolioHeader1Block".
 */
export interface PortfolioHeader1Block {
  heading: string;
  description: string;
  tags?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'portfolioHeader1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PortfolioHeader2Block".
 */
export interface PortfolioHeader2Block {
  heading: string;
  description: string;
  tags?:
    | {
        label: string;
        url: string;
        id?: string | null;
      }[]
    | null;
  image: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'portfolioHeader2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Pricing5Block".
 */
export interface Pricing5Block {
  tagline: string;
  heading: string;
  description: string;
  featureSections?:
    | {
        icon: {
          src: number | Media;
          alt: string;
        };
        heading: string;
        description: string;
        id?: string | null;
      }[]
    | null;
  pricingPlan: {
    planName: string;
    description: string;
    monthlyPrice: string;
    features?:
      | {
          feature: string;
          id?: string | null;
        }[]
      | null;
    button: {
      title: string;
      variant?: ('default' | 'secondary' | 'outline' | 'ghost') | null;
      size?: ('sm' | 'default' | 'lg') | null;
      href?: string | null;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'pricing5';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Stats1Block".
 */
export interface Stats1Block {
  tagline: string;
  heading: string;
  description: string;
  buttons?:
    | {
        title: string;
        variant: 'primary' | 'secondary' | 'outline' | 'ghost' | 'link';
        size: 'sm' | 'md' | 'lg' | 'link';
        url: string;
        iconRight?: boolean | null;
        id?: string | null;
      }[]
    | null;
  stats?:
    | {
        percentage: string;
        heading: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'stats1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Stats3Block".
 */
export interface Stats3Block {
  tagline: string;
  heading: string;
  description: string;
  buttons?:
    | {
        title: string;
        variant: 'primary' | 'secondary' | 'secondary-alt' | 'outline' | 'ghost' | 'link' | 'link-alt';
        size: 'sm' | 'md' | 'lg' | 'link';
        url: string;
        iconRight?: boolean | null;
        id?: string | null;
      }[]
    | null;
  image: {
    src: number | Media;
    alt: string;
  };
  stats?:
    | {
        percentage: string;
        heading: string;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'stats3';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial3Block".
 */
export interface Testimonial3Block {
  heading: string;
  description: string;
  testimonials: {
    image?: {
      src?: (number | null) | Media;
      alt?: string | null;
    };
    quote: string;
    avatar?: {
      src?: (number | null) | Media;
      alt?: string | null;
    };
    name: string;
    position: string;
    companyName: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonial3';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial6Block".
 */
export interface Testimonial6Block {
  heading: string;
  description: string;
  testimonials: {
    numberOfStars: number;
    quote: string;
    avatar?: (number | null) | Media;
    name: string;
    position: string;
    logo?: (number | null) | Media;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonial6';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Timeline1Block".
 */
export interface Timeline1Block {
  tagline: string;
  heading: string;
  description: string;
  buttons?:
    | {
        title: string;
        variant?: ('default' | 'secondary' | 'outline' | 'ghost' | 'link') | null;
        size?: ('sm' | 'default' | 'lg' | 'link') | null;
        href?: string | null;
        id?: string | null;
      }[]
    | null;
  timelines?:
    | {
        date: string;
        heading: string;
        description: string;
        buttons?:
          | {
              title: string;
              variant?: ('default' | 'secondary' | 'outline' | 'ghost' | 'link') | null;
              size?: ('sm' | 'default' | 'lg' | 'link') | null;
              href?: string | null;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'timeline1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Timeline3Block".
 */
export interface Timeline3Block {
  tagline: string;
  heading: string;
  description: string;
  buttons?:
    | {
        title: string;
        variant?: ('default' | 'secondary' | 'outline' | 'ghost' | 'link') | null;
        size?: ('sm' | 'default' | 'lg' | 'link') | null;
        href?: string | null;
        id?: string | null;
      }[]
    | null;
  timelines?:
    | {
        date: string;
        heading: string;
        description: string;
        buttons?:
          | {
              title: string;
              variant?: ('default' | 'secondary' | 'outline' | 'ghost' | 'link') | null;
              size?: ('sm' | 'default' | 'lg' | 'link') | null;
              href?: string | null;
              id?: string | null;
            }[]
          | null;
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'timeline3';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Timeline7Block".
 */
export interface Timeline7Block {
  tagline: string;
  heading: string;
  description: string;
  buttons?:
    | {
        title: string;
        variant?: ('default' | 'secondary' | 'outline' | 'ghost' | 'link') | null;
        size?: ('sm' | 'default' | 'lg' | 'link') | null;
        href?: string | null;
        id?: string | null;
      }[]
    | null;
  timelineItems?:
    | {
        heading: string;
        title: string;
        description: string;
        buttons?:
          | {
              title: string;
              variant?: ('default' | 'secondary' | 'outline' | 'ghost' | 'link') | null;
              size?: ('sm' | 'default' | 'lg' | 'link') | null;
              href?: string | null;
              id?: string | null;
            }[]
          | null;
        image: number | Media;
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'timeline7';
}
/**
 * Envíos del formulario de Contact Section 2
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions".
 */
export interface ContactSubmission {
  id: number;
  firstName: string;
  lastName: string;
  email: string;
  phone?: string | null;
  topic?: string | null;
  description?: string | null;
  message: string;
  /**
   * Indica si el usuario aceptó los términos y condiciones
   */
  acceptTerms?: boolean | null;
  /**
   * Identifica de qué formulario proviene el envío
   */
  source?: string | null;
  /**
   * Estado del envío del formulario
   */
  status?: ('new' | 'reviewing' | 'responded' | 'closed') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * Envíos de formularios multi-paso (formulario 1 y 2)
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-custom-2-submissions".
 */
export interface FormCustom2Submission {
  id: number;
  name: string;
  email: string;
  serviceType: string;
  budget: string;
  aboutProject: string;
  companyName: string;
  employees: string;
  website: string;
  country: string;
  date: string;
  /**
   * Identifica de qué formulario proviene el envío
   */
  source?: ('form-custom-2' | 'multi-form-2') | null;
  /**
   * Estado del envío del formulario
   */
  status?: ('new' | 'reviewing' | 'responded' | 'closed') | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: number;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: number;
  form?: (number | null) | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: number;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: number | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (number | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: number | Post;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: number | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'contact-submissions';
        value: number | ContactSubmission;
      } | null)
    | ({
        relationTo: 'form-custom-2-submissions';
        value: number | FormCustom2Submission;
      } | null)
    | ({
        relationTo: 'redirects';
        value: number | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: number | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: number | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: number | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        archive?: T | ArchiveBlockSelect<T>;
        banner4?: T | Banner4BlockSelect<T>;
        banner9?: T | Banner9BlockSelect<T>;
        blog1?: T | Blog1BlockTypeSelect<T>;
        blog5?: T | Blog5BlockTypeSelect<T>;
        blogPostHeader1?: T | BlogPostHeader1BlockTypeSelect<T>;
        blogPostHeader5?: T | BlogPostHeader5BlockTypeSelect<T>;
        cta?: T | CallToActionBlockSelect<T>;
        careerSection1?: T | CareerSection1BlockSelect<T>;
        career3?:
          | T
          | {
              tagline?: T;
              heading?: T;
              description?: T;
              depts3?:
                | T
                | {
                    title?: T;
                    jobs?:
                      | T
                      | {
                          title?: T;
                          location?: T;
                          description?: T;
                          url?: T;
                          button?:
                            | T
                            | {
                                title?: T;
                                variant?: T;
                                size?: T;
                              };
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        career4?:
          | T
          | {
              tagline?: T;
              heading?: T;
              description?: T;
              depts4?:
                | T
                | {
                    title?: T;
                    jobs?:
                      | T
                      | {
                          title?: T;
                          location?: T;
                          description?: T;
                          url?: T;
                          button?:
                            | T
                            | {
                                title?: T;
                                variant?: T;
                                size?: T;
                              };
                          id?: T;
                        };
                    id?: T;
                  };
              id?: T;
              blockName?: T;
            };
        comparison1?: T | Comparison1BlockSelect<T>;
        comparison13?: T | Comparison13BlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        cta_custom_2?: T | CTACustom_2BlockSelect<T>;
        event1?: T | Event1BlockSelect<T>;
        event3?: T | Event3BlockSelect<T>;
        eventHeader1?: T | EventHeader1BlockSelect<T>;
        eventHeader3?: T | EventHeader3BlockSelect<T>;
        eventItemHdr1?: T | EventItemHeader1BlockSelect<T>;
        eventItemHdr5?: T | EventItemHeader5BlockSelect<T>;
        faq2?: T | FAQ2BlockSelect<T>;
        faq4?: T | FAQ4BlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        form_custom_2?: T | FormCustom_2BlockSelect<T>;
        multiForm2?: T | MultiForm2BlockSelect<T>;
        multiForm7?: T | MultiForm7BlockSelect<T>;
        gallery6?: T | Gallery6BlockSelect<T>;
        gallery19?: T | Gallery19BlockSelect<T>;
        gallery27?: T | Gallery27BlockSelect<T>;
        links1?: T | Links1BlockSelect<T>;
        links4?: T | Links4BlockSelect<T>;
        logo1?: T | Logo1BlockSelect<T>;
        logo2?: T | Logo2BlockSelect<T>;
        longContent1?: T | LongContent1BlockSelect<T>;
        longContent2?: T | LongContent2BlockSelect<T>;
        longContent3?: T | LongContent3BlockSelect<T>;
        longContent4?: T | LongContent4BlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        portfolio1?: T | Portfolio1BlockSelect<T>;
        portfolio5?: T | Portfolio5BlockSelect<T>;
        portfolioHeader1?: T | PortfolioHeader1BlockSelect<T>;
        portfolioHeader2?: T | PortfolioHeader2BlockSelect<T>;
        pricing5?: T | Pricing5BlockSelect<T>;
        stats1?: T | Stats1BlockSelect<T>;
        stats3?: T | Stats3BlockSelect<T>;
        team1?:
          | T
          | {
              tagline?: T;
              heading?: T;
              description?: T;
              teamMembers?:
                | T
                | {
                    image?: T;
                    name?: T;
                    jobTitle?: T;
                    description?: T;
                    socialLinks?:
                      | T
                      | {
                          href?: T;
                          platform?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              footer?:
                | T
                | {
                    heading?: T;
                    description?: T;
                    button?:
                      | T
                      | {
                          title?: T;
                          variant?: T;
                          href?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        team2?:
          | T
          | {
              tagline?: T;
              heading?: T;
              description?: T;
              teamMembers?:
                | T
                | {
                    image?: T;
                    name?: T;
                    jobTitle?: T;
                    description?: T;
                    socialLinks?:
                      | T
                      | {
                          href?: T;
                          platform?: T;
                          id?: T;
                        };
                    id?: T;
                  };
              footer?:
                | T
                | {
                    heading?: T;
                    description?: T;
                    button?:
                      | T
                      | {
                          title?: T;
                          variant?: T;
                          href?: T;
                        };
                  };
              id?: T;
              blockName?: T;
            };
        testimonial3?: T | Testimonial3BlockSelect<T>;
        testimonial6?: T | Testimonial6BlockSelect<T>;
        timeline1?: T | Timeline1BlockSelect<T>;
        timeline3?: T | Timeline3BlockSelect<T>;
        timeline7?: T | Timeline7BlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Banner4Block_select".
 */
export interface Banner4BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  logo?: T;
  logoUrl?: T;
  socialMediaLinks?:
    | T
    | {
        url?: T;
        platform?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Banner9Block_select".
 */
export interface Banner9BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  logo?: T;
  logoUrl?: T;
  socialMediaLinks?:
    | T
    | {
        url?: T;
        platform?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Blog1BlockType_select".
 */
export interface Blog1BlockTypeSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  buttons?:
    | T
    | {
        title?: T;
        variant?: T;
        id?: T;
      };
  categoryLink?: T;
  blogPosts?:
    | T
    | {
        url?: T;
        image?: T;
        category?: T;
        title?: T;
        description?: T;
        avatar?: T;
        fullName?: T;
        date?: T;
        readTime?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Blog5BlockType_select".
 */
export interface Blog5BlockTypeSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  buttons?:
    | T
    | {
        title?: T;
        variant?: T;
        id?: T;
      };
  categoryLink?: T;
  featuredBlogPost?:
    | T
    | {
        url?: T;
        image?: T;
        category?: T;
        title?: T;
        description?: T;
        avatar?: T;
        fullName?: T;
        date?: T;
        readTime?: T;
      };
  blogPosts?:
    | T
    | {
        url?: T;
        image?: T;
        category?: T;
        title?: T;
        description?: T;
        avatar?: T;
        fullName?: T;
        date?: T;
        readTime?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogPostHeader1BlockType_select".
 */
export interface BlogPostHeader1BlockTypeSelect<T extends boolean = true> {
  breadcrumbs?:
    | T
    | {
        url?: T;
        title?: T;
        id?: T;
      };
  heading?: T;
  image?: T;
  author?:
    | T
    | {
        avatar?: T;
        fullName?: T;
        date?: T;
        readTime?: T;
      };
  socialMediaLinks?:
    | T
    | {
        url?: T;
        iconType?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BlogPostHeader5BlockType_select".
 */
export interface BlogPostHeader5BlockTypeSelect<T extends boolean = true> {
  category?: T;
  heading?: T;
  image?: T;
  author?:
    | T
    | {
        avatar?: T;
        fullName?: T;
        date?: T;
        readTime?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CareerSection1Block_select".
 */
export interface CareerSection1BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  jobDepartments?:
    | T
    | {
        title?: T;
        jobs?:
          | T
          | {
              title?: T;
              location?: T;
              description?: T;
              url?: T;
              button?:
                | T
                | {
                    title?: T;
                    variant?: T;
                    size?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Comparison1Block_select".
 */
export interface Comparison1BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  comparisonProducts?:
    | T
    | {
        title?: T;
        products?:
          | T
          | {
              icon?: T;
              productName?: T;
              description?: T;
              id?: T;
            };
        id?: T;
      };
  features?:
    | T
    | {
        text?: T;
        items?:
          | T
          | {
              type?: T;
              textValue?: T;
              id?: T;
            };
        id?: T;
      };
  buttons?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
        url?: T;
        iconRight?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Comparison13Block_select".
 */
export interface Comparison13BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  products?:
    | T
    | {
        icon?: T;
        productName?: T;
        description?: T;
        mainFeatures?:
          | T
          | {
              text?: T;
              items?:
                | T
                | {
                    type?: T;
                    textValue?: T;
                    id?: T;
                  };
              id?: T;
            };
        features?:
          | T
          | {
              text?: T;
              items?:
                | T
                | {
                    type?: T;
                    textValue?: T;
                    id?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CTA_custom_2Block_select".
 */
export interface CTACustom_2BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  buttons?:
    | T
    | {
        title?: T;
        variant?: T;
        href?: T;
        id?: T;
      };
  image?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Event1Block_select".
 */
export interface Event1BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  tabs?:
    | T
    | {
        value?: T;
        trigger?: T;
        content?:
          | T
          | {
              url?: T;
              date?:
                | T
                | {
                    weekday?: T;
                    day?: T;
                    month?: T;
                    year?: T;
                  };
              title?: T;
              status?: T;
              location?: T;
              description?: T;
              button?:
                | T
                | {
                    variant?: T;
                    size?: T;
                    title?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Event3Block_select".
 */
export interface Event3BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  tabs?:
    | T
    | {
        value?: T;
        trigger?: T;
        content?:
          | T
          | {
              url?: T;
              image?: T;
              date?:
                | T
                | {
                    weekday?: T;
                    day?: T;
                    month?: T;
                    year?: T;
                  };
              title?: T;
              status?: T;
              location?: T;
              description?: T;
              button?:
                | T
                | {
                    variant?: T;
                    size?: T;
                    title?: T;
                    url?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventHeader1Block_select".
 */
export interface EventHeader1BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  event?:
    | T
    | {
        url?: T;
        image?: T;
        date?:
          | T
          | {
              weekday?: T;
              day?: T;
              month?: T;
              year?: T;
            };
        category?: T;
        title?: T;
        status?: T;
        location?: T;
        description?: T;
        button?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
            };
      };
  filters?:
    | T
    | {
        button?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
            };
        id?: T;
      };
  events?:
    | T
    | {
        url?: T;
        date?:
          | T
          | {
              weekday?: T;
              day?: T;
              month?: T;
              year?: T;
            };
        title?: T;
        status?: T;
        location?: T;
        description?: T;
        button?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventHeader3Block_select".
 */
export interface EventHeader3BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  event?:
    | T
    | {
        url?: T;
        image?: T;
        category?: T;
        status?: T;
        title?: T;
        date?:
          | T
          | {
              weekday?: T;
              day?: T;
              month?: T;
              year?: T;
            };
        location?: T;
        description?: T;
        button?:
          | T
          | {
              title?: T;
              url?: T;
              variant?: T;
              size?: T;
            };
      };
  featuredEvents?:
    | T
    | {
        url?: T;
        image?: T;
        status?: T;
        date?:
          | T
          | {
              weekday?: T;
              day?: T;
              month?: T;
              year?: T;
            };
        location?: T;
        title?: T;
        description?: T;
        button?:
          | T
          | {
              title?: T;
              url?: T;
              variant?: T;
              size?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventItemHeader1Block_select".
 */
export interface EventItemHeader1BlockSelect<T extends boolean = true> {
  backLink?:
    | T
    | {
        url?: T;
        button?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
            };
      };
  heading?: T;
  description?: T;
  image?: T;
  inputPlaceholder?: T;
  button?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
      };
  termsAndConditions?: T;
  date?:
    | T
    | {
        weekday?: T;
        day?: T;
        month?: T;
        year?: T;
      };
  countdownIsoDate?: T;
  amountLeft?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "EventItemHeader5Block_select".
 */
export interface EventItemHeader5BlockSelect<T extends boolean = true> {
  backLink?:
    | T
    | {
        url?: T;
        button?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
            };
      };
  heading?: T;
  description?: T;
  image?: T;
  inputPlaceholder?: T;
  button?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
      };
  termsAndConditions?: T;
  date?:
    | T
    | {
        weekday?: T;
        day?: T;
        month?: T;
        year?: T;
      };
  countdownIsoDate?: T;
  amountLeft?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ2Block_select".
 */
export interface FAQ2BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  questions?:
    | T
    | {
        title?: T;
        answer?: T;
        id?: T;
      };
  footerHeading?: T;
  footerDescription?: T;
  button?:
    | T
    | {
        title?: T;
        url?: T;
        variant?: T;
        size?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FAQ4Block_select".
 */
export interface FAQ4BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  questions?:
    | T
    | {
        title?: T;
        answer?: T;
        id?: T;
      };
  footerHeading?: T;
  footerDescription?: T;
  button?:
    | T
    | {
        title?: T;
        url?: T;
        variant?: T;
        size?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Form_custom_2Block_select".
 */
export interface FormCustom_2BlockSelect<T extends boolean = true> {
  logo?:
    | T
    | {
        url?: T;
        src?: T;
        alt?: T;
      };
  navText?: T;
  navButton?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
      };
  footerText?: T;
  step1Title?: T;
  step1Description?: T;
  step2Title?: T;
  step2Description?: T;
  step3Title?: T;
  step3Description?: T;
  step4Title?: T;
  step4Description?: T;
  serviceTypeOptions?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  budgetOptions?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  employeesOptions?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  countriesOptions?:
    | T
    | {
        id?: T;
        label?: T;
        value?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MultiForm2Block_select".
 */
export interface MultiForm2BlockSelect<T extends boolean = true> {
  logo?: T;
  logoUrl?: T;
  navText?: T;
  navButton?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
      };
  footerText?: T;
  step1Title?: T;
  step1Description?: T;
  step2Title?: T;
  step2Description?: T;
  step3Title?: T;
  step3Description?: T;
  step4Title?: T;
  step4Description?: T;
  serviceTypeOptions?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  budgetOptions?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  employeesOptions?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  countriesOptions?:
    | T
    | {
        id?: T;
        label?: T;
        value?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MultiForm7Block_select".
 */
export interface MultiForm7BlockSelect<T extends boolean = true> {
  logo?: T;
  logoUrl?: T;
  image?: T;
  imageUrl?: T;
  footerText?: T;
  step1Title?: T;
  step1Description?: T;
  step2Title?: T;
  step2Description?: T;
  step3Title?: T;
  step3Description?: T;
  step4Title?: T;
  step4Description?: T;
  serviceTypeOptions?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  budgetOptions?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  employeesOptions?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  countriesOptions?:
    | T
    | {
        id?: T;
        label?: T;
        value?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery6Block_select".
 */
export interface Gallery6BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  images?:
    | T
    | {
        image?: T;
        url?: T;
        alt?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery19Block_select".
 */
export interface Gallery19BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Gallery27Block_select".
 */
export interface Gallery27BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Links1Block_select".
 */
export interface Links1BlockSelect<T extends boolean = true> {
  author?:
    | T
    | {
        avatar?: T;
        fullName?: T;
        position?: T;
        location?: T;
      };
  categories?:
    | T
    | {
        heading?: T;
        links?:
          | T
          | {
              url?: T;
              title?: T;
              variant?: T;
              id?: T;
            };
        id?: T;
      };
  button?:
    | T
    | {
        variant?: T;
        title?: T;
        subtitle?: T;
      };
  newsLetter?:
    | T
    | {
        heading?: T;
        description?: T;
        inputPlaceholder?: T;
        submitButtonTitle?: T;
        termsAndConditions?: T;
      };
  socialLinks?:
    | T
    | {
        href?: T;
        platform?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Links4Block_select".
 */
export interface Links4BlockSelect<T extends boolean = true> {
  image?: T;
  author?:
    | T
    | {
        fullName?: T;
        position?: T;
        location?: T;
      };
  categories?:
    | T
    | {
        heading?: T;
        links?:
          | T
          | {
              url?: T;
              title?: T;
              variant?: T;
              id?: T;
            };
        id?: T;
      };
  button?:
    | T
    | {
        variant?: T;
        title?: T;
        subtitle?: T;
      };
  newsLetter?:
    | T
    | {
        heading?: T;
        description?: T;
        inputPlaceholder?: T;
        submitButtonTitle?: T;
        termsAndConditions?: T;
      };
  socialLinks?:
    | T
    | {
        href?: T;
        platform?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logo1Block_select".
 */
export interface Logo1BlockSelect<T extends boolean = true> {
  heading?: T;
  logos?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Logo2Block_select".
 */
export interface Logo2BlockSelect<T extends boolean = true> {
  heading?: T;
  logos?:
    | T
    | {
        image?: T;
        alt?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LongContent1Block_select".
 */
export interface LongContent1BlockSelect<T extends boolean = true> {
  heading?: T;
  content?: T;
  image?:
    | T
    | {
        src?: T;
        alt?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LongContent2Block_select".
 */
export interface LongContent2BlockSelect<T extends boolean = true> {
  heading?: T;
  content?: T;
  image?:
    | T
    | {
        src?: T;
        alt?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LongContent3Block_select".
 */
export interface LongContent3BlockSelect<T extends boolean = true> {
  heading?: T;
  content?: T;
  video?: T;
  image?:
    | T
    | {
        src?: T;
        alt?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LongContent4Block_select".
 */
export interface LongContent4BlockSelect<T extends boolean = true> {
  heading?: T;
  content?: T;
  video?: T;
  image?:
    | T
    | {
        src?: T;
        alt?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Portfolio1Block_select".
 */
export interface Portfolio1BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  projects?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        url?: T;
        button?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
            };
        id?: T;
      };
  button?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Portfolio5Block_select".
 */
export interface Portfolio5BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  projects?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
        url?: T;
        tags?:
          | T
          | {
              label?: T;
              url?: T;
              id?: T;
            };
        button?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
            };
        id?: T;
      };
  button?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PortfolioHeader1Block_select".
 */
export interface PortfolioHeader1BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  tags?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PortfolioHeader2Block_select".
 */
export interface PortfolioHeader2BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  tags?:
    | T
    | {
        label?: T;
        url?: T;
        id?: T;
      };
  image?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Pricing5Block_select".
 */
export interface Pricing5BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  featureSections?:
    | T
    | {
        icon?:
          | T
          | {
              src?: T;
              alt?: T;
            };
        heading?: T;
        description?: T;
        id?: T;
      };
  pricingPlan?:
    | T
    | {
        planName?: T;
        description?: T;
        monthlyPrice?: T;
        features?:
          | T
          | {
              feature?: T;
              id?: T;
            };
        button?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
              href?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Stats1Block_select".
 */
export interface Stats1BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  buttons?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
        url?: T;
        iconRight?: T;
        id?: T;
      };
  stats?:
    | T
    | {
        percentage?: T;
        heading?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Stats3Block_select".
 */
export interface Stats3BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  buttons?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
        url?: T;
        iconRight?: T;
        id?: T;
      };
  image?:
    | T
    | {
        src?: T;
        alt?: T;
      };
  stats?:
    | T
    | {
        percentage?: T;
        heading?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial3Block_select".
 */
export interface Testimonial3BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  testimonials?:
    | T
    | {
        image?:
          | T
          | {
              src?: T;
              alt?: T;
            };
        quote?: T;
        avatar?:
          | T
          | {
              src?: T;
              alt?: T;
            };
        name?: T;
        position?: T;
        companyName?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Testimonial6Block_select".
 */
export interface Testimonial6BlockSelect<T extends boolean = true> {
  heading?: T;
  description?: T;
  testimonials?:
    | T
    | {
        numberOfStars?: T;
        quote?: T;
        avatar?: T;
        name?: T;
        position?: T;
        logo?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Timeline1Block_select".
 */
export interface Timeline1BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  buttons?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
        href?: T;
        id?: T;
      };
  timelines?:
    | T
    | {
        date?: T;
        heading?: T;
        description?: T;
        buttons?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
              href?: T;
              id?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Timeline3Block_select".
 */
export interface Timeline3BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  buttons?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
        href?: T;
        id?: T;
      };
  timelines?:
    | T
    | {
        date?: T;
        heading?: T;
        description?: T;
        buttons?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
              href?: T;
              id?: T;
            };
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "Timeline7Block_select".
 */
export interface Timeline7BlockSelect<T extends boolean = true> {
  tagline?: T;
  heading?: T;
  description?: T;
  buttons?:
    | T
    | {
        title?: T;
        variant?: T;
        size?: T;
        href?: T;
        id?: T;
      };
  timelineItems?:
    | T
    | {
        heading?: T;
        title?: T;
        description?: T;
        buttons?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
              href?: T;
              id?: T;
            };
        image?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  slug?: T;
  slugLock?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "contact-submissions_select".
 */
export interface ContactSubmissionsSelect<T extends boolean = true> {
  firstName?: T;
  lastName?: T;
  email?: T;
  phone?: T;
  topic?: T;
  description?: T;
  message?: T;
  acceptTerms?: T;
  source?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-custom-2-submissions_select".
 */
export interface FormCustom2SubmissionsSelect<T extends boolean = true> {
  name?: T;
  email?: T;
  serviceType?: T;
  budget?: T;
  aboutProject?: T;
  companyName?: T;
  employees?: T;
  website?: T;
  country?: T;
  date?: T;
  source?: T;
  status?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  /**
   * Selecciona el tipo de navbar a usar
   */
  navbarType?: ('default' | 'navbar11') | null;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  navbar11Config?: {
    logo: {
      url?: string | null;
      src: string;
      alt?: string | null;
    };
    navLinks?:
      | {
          title: string;
          url: string;
          subMenuLinks?:
            | {
                icon: {
                  src: string;
                  alt?: string | null;
                };
                title: string;
                description: string;
                url: string;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    buttons?:
      | {
          title: string;
          variant?: ('default' | 'secondary' | 'outline' | 'ghost') | null;
          size?: ('sm' | 'default' | 'lg') | null;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  /**
   * Selecciona el tipo de footer a usar
   */
  footerType?: ('default' | 'footer4') | null;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: number | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: number | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  footer4Config?: {
    logo: {
      url?: string | null;
      src: string;
      alt?: string | null;
    };
    columnLinks?:
      | {
          links?:
            | {
                title: string;
                url: string;
                id?: string | null;
              }[]
            | null;
          id?: string | null;
        }[]
      | null;
    socialMediaLinks?:
      | {
          url: string;
          platform: 'facebook' | 'instagram' | 'twitter' | 'linkedin' | 'youtube';
          id?: string | null;
        }[]
      | null;
    footerText?: string | null;
    footerLinks?:
      | {
          title: string;
          url: string;
          id?: string | null;
        }[]
      | null;
  };
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navbarType?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  navbar11Config?:
    | T
    | {
        logo?:
          | T
          | {
              url?: T;
              src?: T;
              alt?: T;
            };
        navLinks?:
          | T
          | {
              title?: T;
              url?: T;
              subMenuLinks?:
                | T
                | {
                    icon?:
                      | T
                      | {
                          src?: T;
                          alt?: T;
                        };
                    title?: T;
                    description?: T;
                    url?: T;
                    id?: T;
                  };
              id?: T;
            };
        buttons?:
          | T
          | {
              title?: T;
              variant?: T;
              size?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  footerType?: T;
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  footer4Config?:
    | T
    | {
        logo?:
          | T
          | {
              url?: T;
              src?: T;
              alt?: T;
            };
        columnLinks?:
          | T
          | {
              links?:
                | T
                | {
                    title?: T;
                    url?: T;
                    id?: T;
                  };
              id?: T;
            };
        socialMediaLinks?:
          | T
          | {
              url?: T;
              platform?: T;
              id?: T;
            };
        footerText?: T;
        footerLinks?:
          | T
          | {
              title?: T;
              url?: T;
              id?: T;
            };
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: number | Post;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}